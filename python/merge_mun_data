#!/usr/bin/env python
from argparse import ArgumentParser
from sys import exit
import csv


def main():
    '''
    Merge municipalities data

    Run:
    ./merge_mun_data -1 ../data/obce1.csv \
                     -2 ../data/munic_pop.csv \
                     -m ../data/municipalities.txt
    '''
    parser = ArgumentParser(description='Yay, merge csv files!')
    parser.add_argument('-1', '--file1',
                        type=str, default='',
                        help='location of file 1')
    parser.add_argument('-2', '--file2',
                        type=str, default='',
                        help='location of file 2')
    parser.add_argument('-m', '--master',
                        type=str, default='',
                        help='location of master file')
    parser.add_argument('-o', '--output-file',
                        type=str, default='../data/municipalities_new.csv',
                        help='location of output file')
    args = parser.parse_args()

    try:
        infile = open(args.file1, "r")
        lines1 = infile.readlines()
        infile.close()
    except IOError:
        print("ERROR: File 1 not found!")
        exit(1)

    try:
        infile = open(args.file2, "r")
        lines2 = infile.readlines()
        infile.close()
    except IOError:
        print("ERROR: File 2 not found!")
        exit(1)

    try:
        infile = open(args.master, "r")
        lines_master = infile.readlines()
        infile.close()
    except IOError:
        print("ERROR: Master file not found!")
        exit(1)

    print("Number of lines in " + args.file1 + ": " + str(len(lines1)))
    print("Number of lines in " + args.file2 + ": " + str(len(lines2)))
    print("Number of lines in " + args.master + ": " + str(len(lines_master)))

    print('\nNumber of municipalities: ' + str(len(lines_master) - 1))

    with open(args.output_file, 'w') as outfile:
        writer = csv.writer(outfile, delimiter=';')

        writer.writerow(['#id', 'name', 'population', 'longitude', 'latitude'])

        for line_master in lines_master[1:]:
            id_master = line_master.split(';')[0].replace('\t', '')

            line1 = [l for l in lines1 if l.split(';')[0] == id_master][0]
            elems1 = line1.split(';')
            name = elems1[1]
            lon = elems1[2]
            lat = elems1[3]

            line2 = [l for l in lines2 if l.split(';')[0] == id_master][0]
            population = line2.split(';')[1].replace('\n', '')

            writer.writerow([id_master, name, population, lon, lat])


if __name__ == '__main__':
    main()
